// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/policies.proto

package common // import "github.com/containers-ai/api/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Recommendation policy. A policy may be either stable or compact.
type RecommendationPolicy int32

const (
	RecommendationPolicy_RECOMMENDATION_POLICY_UNDEFINED RecommendationPolicy = 0
	RecommendationPolicy_STABLE                          RecommendationPolicy = 1
	RecommendationPolicy_COMPACT                         RecommendationPolicy = 2
)

var RecommendationPolicy_name = map[int32]string{
	0: "RECOMMENDATION_POLICY_UNDEFINED",
	1: "STABLE",
	2: "COMPACT",
}
var RecommendationPolicy_value = map[string]int32{
	"RECOMMENDATION_POLICY_UNDEFINED": 0,
	"STABLE":                          1,
	"COMPACT":                         2,
}

func (x RecommendationPolicy) String() string {
	return proto.EnumName(RecommendationPolicy_name, int32(x))
}
func (RecommendationPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_policies_26d5778cf7826366, []int{0}
}

func init() {
	proto.RegisterEnum("containersai.common.RecommendationPolicy", RecommendationPolicy_name, RecommendationPolicy_value)
}

func init() { proto.RegisterFile("common/policies.proto", fileDescriptor_policies_26d5778cf7826366) }

var fileDescriptor_policies_26d5778cf7826366 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2f, 0xc8, 0xcf, 0xc9, 0x4c, 0xce, 0x4c, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x12, 0x4e, 0xce, 0xcf, 0x2b, 0x49, 0xcc, 0xcc, 0x4b, 0x2d, 0x2a, 0x4e, 0xcc, 0xd4,
	0x83, 0xa8, 0xd1, 0x0a, 0xe1, 0x12, 0x09, 0x4a, 0x05, 0xb1, 0x53, 0xf3, 0x52, 0x12, 0x4b, 0x32,
	0xf3, 0xf3, 0x02, 0x40, 0x9a, 0x2a, 0x85, 0x94, 0xb9, 0xe4, 0x83, 0x5c, 0x9d, 0xfd, 0x7d, 0x7d,
	0x5d, 0xfd, 0x5c, 0x1c, 0x43, 0x3c, 0xfd, 0xfd, 0xe2, 0x03, 0xfc, 0x7d, 0x3c, 0x9d, 0x23, 0xe3,
	0x43, 0xfd, 0x5c, 0x5c, 0xdd, 0x3c, 0xfd, 0x5c, 0x5d, 0x04, 0x18, 0x84, 0xb8, 0xb8, 0xd8, 0x82,
	0x43, 0x1c, 0x9d, 0x7c, 0x5c, 0x05, 0x18, 0x85, 0xb8, 0xb9, 0xd8, 0x9d, 0xfd, 0x7d, 0x03, 0x1c,
	0x9d, 0x43, 0x04, 0x98, 0x9c, 0x54, 0xa3, 0x94, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0x40, 0xd6,
	0xe8, 0x23, 0xec, 0xd5, 0x4d, 0xcc, 0xd4, 0x4f, 0x2c, 0xc8, 0xd4, 0x87, 0x58, 0x9e, 0xc4, 0x06,
	0x76, 0x98, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x70, 0x62, 0x3d, 0xb1, 0x00, 0x00, 0x00,
}
