// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/license.proto

package containers_ai_alameda_v1alpha1_datahub

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type License struct {
	Valid                bool     `protobuf:"varint,1,opt,name=Valid,proto3" json:"Valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *License) Reset()         { *m = License{} }
func (m *License) String() string { return proto.CompactTextString(m) }
func (*License) ProtoMessage()    {}
func (*License) Descriptor() ([]byte, []int) {
	return fileDescriptor_beebedb8a969e878, []int{0}
}

func (m *License) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_License.Unmarshal(m, b)
}
func (m *License) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_License.Marshal(b, m, deterministic)
}
func (m *License) XXX_Merge(src proto.Message) {
	xxx_messageInfo_License.Merge(m, src)
}
func (m *License) XXX_Size() int {
	return xxx_messageInfo_License.Size(m)
}
func (m *License) XXX_DiscardUnknown() {
	xxx_messageInfo_License.DiscardUnknown(m)
}

var xxx_messageInfo_License proto.InternalMessageInfo

func (m *License) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*License)(nil), "containers_ai.alameda.v1alpha1.datahub.License")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/license.proto", fileDescriptor_beebedb8a969e878)
}

var fileDescriptor_beebedb8a969e878 = []byte{
	// 122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4a, 0xcc, 0x49, 0xcc,
	0x4d, 0x4d, 0x49, 0x8c, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x33, 0x4c, 0xcc, 0x29, 0xc8, 0x48, 0x34,
	0xd4, 0x4f, 0x49, 0x2c, 0x49, 0xcc, 0x28, 0x4d, 0xd2, 0xcf, 0xc9, 0x4c, 0x4e, 0xcd, 0x2b, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0x4b, 0xce, 0xcf, 0x2b, 0x49, 0xcc, 0xcc, 0x4b,
	0x2d, 0x2a, 0x8e, 0x4f, 0xcc, 0xd4, 0x83, 0xea, 0xd4, 0x83, 0xe9, 0xd2, 0x83, 0xea, 0x52, 0x92,
	0xe7, 0x62, 0xf7, 0x81, 0x68, 0x14, 0x12, 0xe1, 0x62, 0x0d, 0x4b, 0xcc, 0xc9, 0x4c, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x08, 0x82, 0x70, 0x92, 0xd8, 0xc0, 0xe6, 0x19, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x92, 0x60, 0x04, 0xde, 0x7d, 0x00, 0x00, 0x00,
}
