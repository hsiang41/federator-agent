// Code generated by protoc-gen-go. DO NOT EDIT.
// source: datahub/predictions/predictions.proto

package predictions // import "github.com/containers-ai/api/datahub/predictions"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import metrics "github.com/containers-ai/api/datahub/metrics"
import resources "github.com/containers-ai/api/datahub/resources"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Represents a list of predicted metrics data of a container
type ContainerPrediction struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// use containersai.datahub.metrics.MetricType as key
	PredictedRawData        map[int32]*metrics.MetricData `protobuf:"bytes,2,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PredictedUpperboundData map[int32]*metrics.MetricData `protobuf:"bytes,3,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PredictedLowerboundData map[int32]*metrics.MetricData `protobuf:"bytes,4,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral    struct{}                      `json:"-"`
	XXX_unrecognized        []byte                        `json:"-"`
	XXX_sizecache           int32                         `json:"-"`
}

func (m *ContainerPrediction) Reset()         { *m = ContainerPrediction{} }
func (m *ContainerPrediction) String() string { return proto.CompactTextString(m) }
func (*ContainerPrediction) ProtoMessage()    {}
func (*ContainerPrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_predictions_789dc9f3310a2e29, []int{0}
}
func (m *ContainerPrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerPrediction.Unmarshal(m, b)
}
func (m *ContainerPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerPrediction.Marshal(b, m, deterministic)
}
func (dst *ContainerPrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerPrediction.Merge(dst, src)
}
func (m *ContainerPrediction) XXX_Size() int {
	return xxx_messageInfo_ContainerPrediction.Size(m)
}
func (m *ContainerPrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerPrediction proto.InternalMessageInfo

func (m *ContainerPrediction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerPrediction) GetPredictedRawData() map[int32]*metrics.MetricData {
	if m != nil {
		return m.PredictedRawData
	}
	return nil
}

func (m *ContainerPrediction) GetPredictedUpperboundData() map[int32]*metrics.MetricData {
	if m != nil {
		return m.PredictedUpperboundData
	}
	return nil
}

func (m *ContainerPrediction) GetPredictedLowerboundData() map[int32]*metrics.MetricData {
	if m != nil {
		return m.PredictedLowerboundData
	}
	return nil
}

// Represents a list of predicted metrics data of a pod
type PodPrediction struct {
	NamespacedName       *resources.NamespacedName `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	ContainerPredictions []*ContainerPrediction    `protobuf:"bytes,2,rep,name=container_predictions,json=containerPredictions,proto3" json:"container_predictions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PodPrediction) Reset()         { *m = PodPrediction{} }
func (m *PodPrediction) String() string { return proto.CompactTextString(m) }
func (*PodPrediction) ProtoMessage()    {}
func (*PodPrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_predictions_789dc9f3310a2e29, []int{1}
}
func (m *PodPrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodPrediction.Unmarshal(m, b)
}
func (m *PodPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodPrediction.Marshal(b, m, deterministic)
}
func (dst *PodPrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodPrediction.Merge(dst, src)
}
func (m *PodPrediction) XXX_Size() int {
	return xxx_messageInfo_PodPrediction.Size(m)
}
func (m *PodPrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_PodPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_PodPrediction proto.InternalMessageInfo

func (m *PodPrediction) GetNamespacedName() *resources.NamespacedName {
	if m != nil {
		return m.NamespacedName
	}
	return nil
}

func (m *PodPrediction) GetContainerPredictions() []*ContainerPrediction {
	if m != nil {
		return m.ContainerPredictions
	}
	return nil
}

// Represents a list of predicted metrics data of a node
type NodePrediction struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsScheduled bool   `protobuf:"varint,2,opt,name=is_scheduled,json=isScheduled,proto3" json:"is_scheduled,omitempty"`
	// use containersai.datahub.metrics.MetricType as key
	PredictedRawData        map[int32]*metrics.MetricData `protobuf:"bytes,3,rep,name=predicted_raw_data,json=predictedRawData,proto3" json:"predicted_raw_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PredictedUpperboundData map[int32]*metrics.MetricData `protobuf:"bytes,4,rep,name=predicted_upperbound_data,json=predictedUpperboundData,proto3" json:"predicted_upperbound_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PredictedLowerboundData map[int32]*metrics.MetricData `protobuf:"bytes,5,rep,name=predicted_lowerbound_data,json=predictedLowerboundData,proto3" json:"predicted_lowerbound_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral    struct{}                      `json:"-"`
	XXX_unrecognized        []byte                        `json:"-"`
	XXX_sizecache           int32                         `json:"-"`
}

func (m *NodePrediction) Reset()         { *m = NodePrediction{} }
func (m *NodePrediction) String() string { return proto.CompactTextString(m) }
func (*NodePrediction) ProtoMessage()    {}
func (*NodePrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_predictions_789dc9f3310a2e29, []int{2}
}
func (m *NodePrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePrediction.Unmarshal(m, b)
}
func (m *NodePrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePrediction.Marshal(b, m, deterministic)
}
func (dst *NodePrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePrediction.Merge(dst, src)
}
func (m *NodePrediction) XXX_Size() int {
	return xxx_messageInfo_NodePrediction.Size(m)
}
func (m *NodePrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePrediction.DiscardUnknown(m)
}

var xxx_messageInfo_NodePrediction proto.InternalMessageInfo

func (m *NodePrediction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodePrediction) GetIsScheduled() bool {
	if m != nil {
		return m.IsScheduled
	}
	return false
}

func (m *NodePrediction) GetPredictedRawData() map[int32]*metrics.MetricData {
	if m != nil {
		return m.PredictedRawData
	}
	return nil
}

func (m *NodePrediction) GetPredictedUpperboundData() map[int32]*metrics.MetricData {
	if m != nil {
		return m.PredictedUpperboundData
	}
	return nil
}

func (m *NodePrediction) GetPredictedLowerboundData() map[int32]*metrics.MetricData {
	if m != nil {
		return m.PredictedLowerboundData
	}
	return nil
}

func init() {
	proto.RegisterType((*ContainerPrediction)(nil), "containersai.datahub.predictions.ContainerPrediction")
	proto.RegisterMapType((map[int32]*metrics.MetricData)(nil), "containersai.datahub.predictions.ContainerPrediction.PredictedLowerboundDataEntry")
	proto.RegisterMapType((map[int32]*metrics.MetricData)(nil), "containersai.datahub.predictions.ContainerPrediction.PredictedRawDataEntry")
	proto.RegisterMapType((map[int32]*metrics.MetricData)(nil), "containersai.datahub.predictions.ContainerPrediction.PredictedUpperboundDataEntry")
	proto.RegisterType((*PodPrediction)(nil), "containersai.datahub.predictions.PodPrediction")
	proto.RegisterType((*NodePrediction)(nil), "containersai.datahub.predictions.NodePrediction")
	proto.RegisterMapType((map[int32]*metrics.MetricData)(nil), "containersai.datahub.predictions.NodePrediction.PredictedLowerboundDataEntry")
	proto.RegisterMapType((map[int32]*metrics.MetricData)(nil), "containersai.datahub.predictions.NodePrediction.PredictedRawDataEntry")
	proto.RegisterMapType((map[int32]*metrics.MetricData)(nil), "containersai.datahub.predictions.NodePrediction.PredictedUpperboundDataEntry")
}

func init() {
	proto.RegisterFile("datahub/predictions/predictions.proto", fileDescriptor_predictions_789dc9f3310a2e29)
}

var fileDescriptor_predictions_789dc9f3310a2e29 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0xdd, 0x8a, 0x13, 0x31,
	0x18, 0x65, 0xda, 0x6d, 0xd1, 0x54, 0xd7, 0x25, 0xba, 0x58, 0xab, 0x42, 0x2d, 0x08, 0x73, 0x63,
	0x46, 0x46, 0x04, 0xf1, 0xc2, 0x0b, 0xff, 0x6e, 0x74, 0x97, 0x12, 0x11, 0xc1, 0x9b, 0x21, 0x4d,
	0x82, 0x1b, 0xed, 0x4c, 0x42, 0x92, 0xb1, 0xcc, 0x23, 0xec, 0x8d, 0xef, 0xe0, 0x1b, 0xf8, 0x30,
	0x3e, 0x90, 0xcc, 0x6f, 0x67, 0xd6, 0xd0, 0xea, 0xae, 0x8a, 0x17, 0x7b, 0xd5, 0xaf, 0xf9, 0xe6,
	0x3b, 0xe7, 0xf0, 0x4d, 0xce, 0x19, 0x70, 0x97, 0x11, 0x4b, 0x8e, 0xd2, 0x45, 0xa0, 0x34, 0x67,
	0x82, 0x5a, 0x21, 0x13, 0xd3, 0xae, 0x91, 0xd2, 0xd2, 0x4a, 0x38, 0xa5, 0x32, 0xb1, 0x44, 0x24,
	0x5c, 0x1b, 0x22, 0x50, 0x35, 0x83, 0x5a, 0xcf, 0x4d, 0x6e, 0xd6, 0x40, 0x31, 0xb7, 0x5a, 0x50,
	0x13, 0xd8, 0x4c, 0xf1, 0x6a, 0x7c, 0x72, 0xbb, 0x6e, 0x6a, 0x6e, 0x64, 0xaa, 0x29, 0xef, 0xb4,
	0x67, 0x5f, 0x87, 0xe0, 0xea, 0xb3, 0x9a, 0x60, 0xde, 0x80, 0x42, 0x08, 0x76, 0x12, 0x12, 0xf3,
	0xb1, 0x37, 0xf5, 0xfc, 0x8b, 0xb8, 0xa8, 0x61, 0x06, 0x60, 0x45, 0xcb, 0x59, 0xa4, 0xc9, 0x2a,
	0xca, 0xa1, 0xc7, 0xbd, 0x69, 0xdf, 0x1f, 0x85, 0xaf, 0xd0, 0x36, 0x99, 0xc8, 0x41, 0x83, 0xe6,
	0x35, 0x1e, 0x26, 0xab, 0xe7, 0xc4, 0x92, 0x17, 0x89, 0xd5, 0x19, 0xde, 0x53, 0x27, 0x8e, 0xe1,
	0x17, 0x0f, 0xdc, 0x58, 0x73, 0xa7, 0x4a, 0x71, 0xbd, 0x90, 0x69, 0xc2, 0x4a, 0x09, 0xfd, 0x42,
	0x02, 0x3e, 0xa3, 0x84, 0xb7, 0x0d, 0xea, 0x5a, 0xc9, 0x75, 0xe5, 0xee, 0x9e, 0x10, 0xb4, 0x94,
	0xab, 0x8e, 0xa0, 0x9d, 0x3f, 0x22, 0xe8, 0x75, 0x83, 0xea, 0x12, 0xd4, 0xed, 0x4e, 0x62, 0xb0,
	0xef, 0x5c, 0x26, 0xdc, 0x03, 0xfd, 0x4f, 0x3c, 0x2b, 0x5e, 0xe4, 0x00, 0xe7, 0x25, 0x7c, 0x02,
	0x06, 0x9f, 0xc9, 0x32, 0xe5, 0xe3, 0xde, 0xd4, 0xf3, 0x47, 0xa1, 0xef, 0x96, 0x59, 0x5d, 0x26,
	0x74, 0x50, 0xfc, 0xe6, 0x78, 0xb8, 0x1c, 0x7b, 0xdc, 0x7b, 0xe4, 0x4d, 0x2c, 0xb8, 0xb5, 0x69,
	0x71, 0xff, 0x80, 0xd5, 0xb1, 0x9d, 0xbf, 0xc3, 0x3a, 0xfb, 0xee, 0x81, 0xcb, 0x73, 0xc9, 0x5a,
	0xee, 0x78, 0x07, 0xae, 0xe4, 0x8e, 0x30, 0x8a, 0x50, 0xce, 0xa2, 0xc6, 0x28, 0xa3, 0x10, 0xb9,
	0xf1, 0x1b, 0xef, 0xa1, 0xc3, 0x66, 0x2c, 0xaf, 0xf0, 0x6e, 0xd2, 0xf9, 0x0f, 0x3f, 0x82, 0xfd,
	0x06, 0x20, 0x6a, 0x5d, 0x94, 0xca, 0x65, 0x0f, 0x4f, 0x75, 0xa3, 0xf0, 0x35, 0xfa, 0xf3, 0xa1,
	0x99, 0x7d, 0x1b, 0x82, 0xdd, 0x43, 0xc9, 0xf8, 0x16, 0xd7, 0xdf, 0x01, 0x97, 0x84, 0x89, 0x0c,
	0x3d, 0xe2, 0x2c, 0x5d, 0x72, 0x56, 0x2c, 0xf2, 0x02, 0x1e, 0x09, 0xf3, 0xa6, 0x3e, 0x82, 0xd6,
	0x19, 0x0c, 0xa5, 0x2b, 0x5f, 0x6e, 0x97, 0xdc, 0x15, 0xf1, 0xcb, 0x99, 0x70, 0xbc, 0x31, 0x13,
	0x4a, 0x0b, 0x1e, 0x9c, 0x9e, 0xfd, 0xb7, 0xe2, 0xe0, 0x78, 0x63, 0x1c, 0x0c, 0xce, 0xaa, 0xe5,
	0x3c, 0x09, 0xfe, 0x8b, 0x24, 0x78, 0x1a, 0xbe, 0xbf, 0xff, 0x41, 0xd8, 0xfc, 0x39, 0x2a, 0xe3,
	0x60, 0x0d, 0x70, 0x8f, 0x88, 0x80, 0x28, 0x11, 0x38, 0xbe, 0xe8, 0x8b, 0x61, 0xf1, 0xa1, 0x7d,
	0xf0, 0x23, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x61, 0xcb, 0x70, 0xef, 0x07, 0x00, 0x00,
}
