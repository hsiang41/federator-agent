// Code generated by protoc-gen-go. DO NOT EDIT.
// source: datahub/metric/v1alpha2/metric.proto

package v1alpha2 // import "github.com/containers-ai/api/datahub/metric/v1alpha2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v1alpha2 "github.com/containers-ai/api/datahub/resource/metadata/v1alpha2"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Metric type. A metric may be either CPU or memory.
type MetricType int32

const (
	MetricType_UNDEFINED                    MetricType = 0
	MetricType_CPU_USAGE_SECONDS_PERCENTAGE MetricType = 1
	MetricType_MEMORY_USAGE_BYTES           MetricType = 2
)

var MetricType_name = map[int32]string{
	0: "UNDEFINED",
	1: "CPU_USAGE_SECONDS_PERCENTAGE",
	2: "MEMORY_USAGE_BYTES",
}
var MetricType_value = map[string]int32{
	"UNDEFINED":                    0,
	"CPU_USAGE_SECONDS_PERCENTAGE": 1,
	"MEMORY_USAGE_BYTES":           2,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metric_f49198ce58f4f86b, []int{0}
}

// *
// Represents metric data of a container
type ContainerMetric struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// use MetricType as key
	MetricData           map[int32]*MetricData `protobuf:"bytes,2,rep,name=metric_data,json=metricData,proto3" json:"metric_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ContainerMetric) Reset()         { *m = ContainerMetric{} }
func (m *ContainerMetric) String() string { return proto.CompactTextString(m) }
func (*ContainerMetric) ProtoMessage()    {}
func (*ContainerMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_f49198ce58f4f86b, []int{0}
}
func (m *ContainerMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMetric.Unmarshal(m, b)
}
func (m *ContainerMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMetric.Marshal(b, m, deterministic)
}
func (dst *ContainerMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMetric.Merge(dst, src)
}
func (m *ContainerMetric) XXX_Size() int {
	return xxx_messageInfo_ContainerMetric.Size(m)
}
func (m *ContainerMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMetric.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMetric proto.InternalMessageInfo

func (m *ContainerMetric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerMetric) GetMetricData() map[int32]*MetricData {
	if m != nil {
		return m.MetricData
	}
	return nil
}

// *
// Represents metric data of a pod
type PodMetric struct {
	NamespacedName       *v1alpha2.NamespacedName `protobuf:"bytes,1,opt,name=namespaced_name,json=namespacedName,proto3" json:"namespaced_name,omitempty"`
	ContainerMetrics     []*ContainerMetric       `protobuf:"bytes,2,rep,name=container_metrics,json=containerMetrics,proto3" json:"container_metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PodMetric) Reset()         { *m = PodMetric{} }
func (m *PodMetric) String() string { return proto.CompactTextString(m) }
func (*PodMetric) ProtoMessage()    {}
func (*PodMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_f49198ce58f4f86b, []int{1}
}
func (m *PodMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodMetric.Unmarshal(m, b)
}
func (m *PodMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodMetric.Marshal(b, m, deterministic)
}
func (dst *PodMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodMetric.Merge(dst, src)
}
func (m *PodMetric) XXX_Size() int {
	return xxx_messageInfo_PodMetric.Size(m)
}
func (m *PodMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_PodMetric.DiscardUnknown(m)
}

var xxx_messageInfo_PodMetric proto.InternalMessageInfo

func (m *PodMetric) GetNamespacedName() *v1alpha2.NamespacedName {
	if m != nil {
		return m.NamespacedName
	}
	return nil
}

func (m *PodMetric) GetContainerMetrics() []*ContainerMetric {
	if m != nil {
		return m.ContainerMetrics
	}
	return nil
}

// *
// Represents metric data of a node
type NodeMetric struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// use MetricType as key
	MetricData           map[int32]*MetricData `protobuf:"bytes,2,rep,name=metric_data,json=metricData,proto3" json:"metric_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NodeMetric) Reset()         { *m = NodeMetric{} }
func (m *NodeMetric) String() string { return proto.CompactTextString(m) }
func (*NodeMetric) ProtoMessage()    {}
func (*NodeMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_f49198ce58f4f86b, []int{2}
}
func (m *NodeMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMetric.Unmarshal(m, b)
}
func (m *NodeMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMetric.Marshal(b, m, deterministic)
}
func (dst *NodeMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMetric.Merge(dst, src)
}
func (m *NodeMetric) XXX_Size() int {
	return xxx_messageInfo_NodeMetric.Size(m)
}
func (m *NodeMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMetric.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMetric proto.InternalMessageInfo

func (m *NodeMetric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeMetric) GetMetricData() map[int32]*MetricData {
	if m != nil {
		return m.MetricData
	}
	return nil
}

// *
// Represents a data point of time-series metric data
type Sample struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	NumValue             string               `protobuf:"bytes,2,opt,name=num_value,json=numValue,proto3" json:"num_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_f49198ce58f4f86b, []int{3}
}
func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (dst *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(dst, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Sample) GetNumValue() string {
	if m != nil {
		return m.NumValue
	}
	return ""
}

// *
// Represents a time range definition
//
type TimeRange struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Step                 *duration.Duration   `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_f49198ce58f4f86b, []int{4}
}
func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (dst *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(dst, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimeRange) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *TimeRange) GetStep() *duration.Duration {
	if m != nil {
		return m.Step
	}
	return nil
}

// *
// Represents a piece of metreic data
type MetricData struct {
	// data can be time series or non-time series
	Data                 []*Sample `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetricData) Reset()         { *m = MetricData{} }
func (m *MetricData) String() string { return proto.CompactTextString(m) }
func (*MetricData) ProtoMessage()    {}
func (*MetricData) Descriptor() ([]byte, []int) {
	return fileDescriptor_metric_f49198ce58f4f86b, []int{5}
}
func (m *MetricData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricData.Unmarshal(m, b)
}
func (m *MetricData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricData.Marshal(b, m, deterministic)
}
func (dst *MetricData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricData.Merge(dst, src)
}
func (m *MetricData) XXX_Size() int {
	return xxx_messageInfo_MetricData.Size(m)
}
func (m *MetricData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricData.DiscardUnknown(m)
}

var xxx_messageInfo_MetricData proto.InternalMessageInfo

func (m *MetricData) GetData() []*Sample {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ContainerMetric)(nil), "containersai.datahub.metric.v1alpha2.ContainerMetric")
	proto.RegisterMapType((map[int32]*MetricData)(nil), "containersai.datahub.metric.v1alpha2.ContainerMetric.MetricDataEntry")
	proto.RegisterType((*PodMetric)(nil), "containersai.datahub.metric.v1alpha2.PodMetric")
	proto.RegisterType((*NodeMetric)(nil), "containersai.datahub.metric.v1alpha2.NodeMetric")
	proto.RegisterMapType((map[int32]*MetricData)(nil), "containersai.datahub.metric.v1alpha2.NodeMetric.MetricDataEntry")
	proto.RegisterType((*Sample)(nil), "containersai.datahub.metric.v1alpha2.Sample")
	proto.RegisterType((*TimeRange)(nil), "containersai.datahub.metric.v1alpha2.TimeRange")
	proto.RegisterType((*MetricData)(nil), "containersai.datahub.metric.v1alpha2.MetricData")
	proto.RegisterEnum("containersai.datahub.metric.v1alpha2.MetricType", MetricType_name, MetricType_value)
}

func init() {
	proto.RegisterFile("datahub/metric/v1alpha2/metric.proto", fileDescriptor_metric_f49198ce58f4f86b)
}

var fileDescriptor_metric_f49198ce58f4f86b = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x69, 0x5a, 0xea, 0x89, 0xa0, 0x61, 0x0f, 0x28, 0x04, 0x04, 0x51, 0xd4, 0x43, 0x85,
	0xa8, 0x4d, 0x03, 0x45, 0xc0, 0x85, 0xb6, 0xc9, 0xb6, 0xe2, 0x10, 0x37, 0xda, 0x24, 0x48, 0xe5,
	0x62, 0x6d, 0xec, 0x6d, 0x62, 0x11, 0xef, 0x5a, 0xf6, 0xba, 0x52, 0xfe, 0x13, 0x7f, 0x88, 0xff,
	0xc1, 0x19, 0xa1, 0x5d, 0x7f, 0x44, 0x09, 0x05, 0x22, 0x4e, 0x9c, 0xbc, 0x3b, 0x9e, 0xf7, 0xe6,
	0xcd, 0x1b, 0xcd, 0xc2, 0xbe, 0x4f, 0x25, 0x9d, 0xa5, 0x13, 0x3b, 0x64, 0x32, 0x0e, 0x3c, 0xfb,
	0xe6, 0x88, 0xce, 0xa3, 0x19, 0xed, 0xe4, 0x77, 0x2b, 0x8a, 0x85, 0x14, 0x68, 0xdf, 0x13, 0x5c,
	0xd2, 0x80, 0xb3, 0x38, 0xa1, 0x81, 0x95, 0x43, 0xac, 0x3c, 0xa5, 0x80, 0x34, 0x9f, 0x4d, 0x85,
	0x98, 0xce, 0x99, 0xad, 0x31, 0x93, 0xf4, 0xda, 0x96, 0x41, 0xc8, 0x12, 0x49, 0xc3, 0x28, 0xa3,
	0x69, 0x3e, 0x5d, 0x4f, 0xf0, 0xd3, 0x98, 0xca, 0x40, 0xf0, 0xfc, 0xff, 0x51, 0x21, 0x26, 0x66,
	0x89, 0x48, 0x63, 0x8f, 0x29, 0x15, 0x54, 0x05, 0x57, 0x74, 0xe9, 0x48, 0x06, 0x69, 0xff, 0x30,
	0x60, 0xaf, 0x5b, 0x88, 0xeb, 0x6b, 0x41, 0x08, 0x41, 0x95, 0xd3, 0x90, 0x35, 0x8c, 0x96, 0x71,
	0x60, 0x12, 0x7d, 0x46, 0xd7, 0x50, 0xcb, 0xe4, 0xba, 0x0a, 0xdc, 0xa8, 0xb4, 0xb6, 0x0e, 0x6a,
	0x1d, 0x6c, 0x6d, 0xd2, 0x97, 0xb5, 0xc6, 0x6f, 0x65, 0x9f, 0x1e, 0x95, 0x14, 0x73, 0x19, 0x2f,
	0x08, 0x84, 0x65, 0xa0, 0x29, 0x60, 0x6f, 0xed, 0x37, 0xaa, 0xc3, 0xd6, 0x17, 0xb6, 0xd0, 0x6a,
	0xb6, 0x89, 0x3a, 0xa2, 0x73, 0xd8, 0xbe, 0xa1, 0xf3, 0x94, 0x35, 0x2a, 0x2d, 0xe3, 0xa0, 0xd6,
	0x79, 0xb9, 0x99, 0x8c, 0x25, 0x2f, 0xc9, 0xe0, 0xef, 0x2b, 0x6f, 0x8d, 0xf6, 0x37, 0x03, 0xcc,
	0x81, 0xf0, 0xf3, 0xd6, 0x67, 0xb0, 0xa7, 0xda, 0x4d, 0x22, 0xea, 0x31, 0xdf, 0x2d, 0x5d, 0xa8,
	0x75, 0x3e, 0xdc, 0x5e, 0xa3, 0x30, 0xda, 0x2a, 0x6d, 0x2d, 0xcb, 0x39, 0x25, 0x8f, 0x3a, 0x91,
	0xfb, 0x7c, 0xe5, 0x8e, 0x26, 0xf0, 0xa0, 0x64, 0x74, 0x33, 0xa9, 0x49, 0x6e, 0xeb, 0xf1, 0x3f,
	0xd9, 0x4a, 0xea, 0xde, 0x6a, 0x20, 0x69, 0x7f, 0x37, 0x00, 0x1c, 0xe1, 0xb3, 0x3f, 0xcc, 0x95,
	0xde, 0x36, 0xd7, 0x93, 0xcd, 0x04, 0x2c, 0xa9, 0xff, 0xaf, 0x91, 0x8e, 0x61, 0x67, 0x48, 0xc3,
	0x68, 0xce, 0x90, 0x05, 0x55, 0xb5, 0x43, 0xf9, 0x0c, 0x9b, 0x56, 0xb6, 0x3f, 0x56, 0xb1, 0x3f,
	0xd6, 0xa8, 0x58, 0x30, 0xa2, 0xf3, 0xd0, 0x63, 0x30, 0x79, 0x1a, 0xba, 0x4b, 0x25, 0x26, 0xd9,
	0xe5, 0x69, 0xf8, 0x49, 0xdd, 0xdb, 0x5f, 0x0d, 0x30, 0x15, 0x80, 0x50, 0x3e, 0x65, 0xe8, 0x1d,
	0x40, 0x22, 0x69, 0x2c, 0xdd, 0x0d, 0x0b, 0x98, 0x3a, 0x5b, 0xdd, 0xd1, 0x31, 0xec, 0x32, 0xee,
	0x67, 0xc0, 0xca, 0x5f, 0x81, 0x77, 0x19, 0xf7, 0x35, 0xec, 0x10, 0xaa, 0x89, 0x64, 0x51, 0x63,
	0x4b, 0x43, 0x1e, 0xfd, 0x02, 0xe9, 0xe5, 0x8f, 0x01, 0xd1, 0x69, 0x6d, 0x07, 0x60, 0x69, 0x0f,
	0x3a, 0x81, 0xaa, 0x1e, 0xb0, 0xa1, 0x07, 0xfc, 0x62, 0x33, 0x7b, 0x33, 0x17, 0x89, 0x46, 0x3e,
	0x1f, 0x17, 0x7c, 0xa3, 0x45, 0xc4, 0xd0, 0x3d, 0x30, 0xc7, 0x4e, 0x0f, 0x9f, 0x7f, 0x74, 0x70,
	0xaf, 0x7e, 0x07, 0xb5, 0xe0, 0x49, 0x77, 0x30, 0x76, 0xc7, 0xc3, 0xd3, 0x0b, 0xec, 0x0e, 0x71,
	0xf7, 0xd2, 0xe9, 0x0d, 0xdd, 0x01, 0x26, 0x5d, 0xec, 0x8c, 0x4e, 0x2f, 0x70, 0xdd, 0x40, 0x0f,
	0x01, 0xf5, 0x71, 0xff, 0x92, 0x5c, 0xe5, 0x49, 0x67, 0x57, 0x23, 0x3c, 0xac, 0x57, 0xce, 0xde,
	0x7c, 0x7e, 0x3d, 0x0d, 0xa4, 0xaa, 0xee, 0x89, 0xd0, 0x5e, 0xca, 0x3a, 0xa4, 0x81, 0x4d, 0xa3,
	0xc0, 0xfe, 0xcd, 0xfb, 0x3a, 0xd9, 0xd1, 0x7d, 0xbf, 0xfa, 0x19, 0x00, 0x00, 0xff, 0xff, 0xf8,
	0xee, 0x88, 0x55, 0x81, 0x05, 0x00, 0x00,
}
